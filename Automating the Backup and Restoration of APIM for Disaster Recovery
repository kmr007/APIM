# Automating Azure API management backup and Restore using powershell script and Automation Account

# Pre-Requisites 
•	Azure PowerShell
•	Azure Subscription access with Owner privillege
•	Azure Automation Account
•	Azure Storage Account
•	Azure APIM

# Step 1 
Create a storage Account for storing the backup file of APIM.

# Step 2

Create an Automation Account for Automating the powershell script.

# Step 3

Execute the below powershell script for automating the APIM backup using Azure Automation Account

$connectionName = "AzureRunAsConnection"
try
{
    # Get the connection "AzureRunAsConnection "
    $servicePrincipalConnection=Get-AutomationConnection -Name $connectionName         

    "Logging in to Azure..."
    Add-AzureRmAccount `
        -ServicePrincipal `
        -TenantId $servicePrincipalConnection.TenantId `
        -ApplicationId $servicePrincipalConnection.ApplicationId `
        -CertificateThumbprint $servicePrincipalConnection.CertificateThumbprint 	
	}
catch {
    if (!$servicePrincipalConnection)
    {
        $ErrorMessage = "Connection $connectionName not found."
        throw $ErrorMessage
    } else{
        Write-Error -Message $_.Exception
        throw $_.Exception
    }
}
Select-AzureRmSubscription “Subscription ID where the  APIM resides”
# Select the APIM instance to backup
$destinationApim = Get-AzureRmApiManagement | Where-Object {$_.Name -eq "APIM resource group name"}
$sourceApim = Get-AzureRmApiManagement | Where-Object {$_.Name -eq "APIM name"}
# Select the storage account to hold the backup
$storagecontext = New-AzureStorageContext -StorageAccountKey 'enter the storage account key' -StorageAccountName 'enter the storage account name'
#Get todays date as a string for the backup filename
$todaysdate = get-date -Format "yyyyMMdd-HHmm"
Select-AzureRmSubscription 'enter the subscription id'

# Perform APIM config backup
$containername="apibackup"
$blobname="myapimservice$todaysdate.apimbackup"
Backup-AzureRmApiManagement -ResourceGroupName 'apim resource group'	-Name 'apiname' -StorageContext $StorageContext1 -TargetContainerName $containername -TargetBlobName $blobname

# Copying APIM backup from source Storage Account to Destination Storage Account
 $SourceStorageAccountName = "apimapi"
 $sourceStorageAccountKey = "enter the  source storage account access key/SAS"
 $SourceContainerName = "apibackup"
 $DestinationStorageAccountName = "apiapi"
 $destinationStorageAccountKey = "enter the destination account access key /SAS"
 $DestinationContainerName = "test"
 $sourceContext = New-AzureStorageContext -StorageAccountName $SourceStorageAccountName -StorageAccountKey $sourceStorageAccountKey
 $destinationContext = New-AzureStorageContext -StorageAccountName $DestinationStorageAccountName -StorageAccountKey $destinationStorageAccountKey 
 $blobs = Get-AzureStorageBlob -Context $sourceContext -Container $SourceContainerName
  
# Asks for confirmation for every blob that already exists in the destination container
  $blobs | Start-AzureStorageBlobCopy -Context $sourceContext -DestContext $destinationContext -DestContainer $DestinationContainerName

#Select the Destination subscription 
  Select-AzureRmSubscription ‘Destination subscription ID’

#Restore APIM
Restore-AzureRmApiManagement -ResourceGroupName 'Enter the Apim resource group' -Name 'Enter the APIM name' -StorageContext $destinationContext -SourceContainerName $DestinationContainerName -SourceBlobName $blobname


Steps Summary 

•	Create Storage Accounts in both subscription for taking backup and restore of APIM
•	Backup APIM in the source storage Account
•	Copy APIM backup data across the subscription.
•	Restore APIM from the backup file which is in the Destination storage Account.
•	Automate the entire script using the Azure automation account runbook.

Benefits of this solution

Using this solutions changes in the primary APIM can be replicated to DR region apim automatically.
